# implementation generic
#spring.jpa.show-sql=true

# hibernate implementation
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.format_sql=true

# this will show you the values bound to the parameters
logging.level.org.hibernate.type.descriptor.sql = trace

spring.h2.console.enabled=true

spring.datasource.url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE;MODE=MYSQL;DATABASE_TO_LOWER=TRUE;CASE_INSENSITIVE_IDENTIFIERS=TRUE
spring.datasource.username=sa
spring.datasource.password=password

# moved here for H2 MySQL compatibility mode
spring.jpa.database=mysql
# introduced for MySQL
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# (0.3) used when letting H2+Hibernate infer DDL from @Entity to create the DB
#spring.jpa.hibernate.ddl-auto=update

spring.jpa.defer-datasource-initialization=false
# (1.3) replace 'update' with 'validate' since Hibernate is loading resources/schema.sql
spring.jpa.hibernate.ddl-auto=validate
# (1.4) must tell Spring to always run resources/schema.sql to create the DB
# If this doesn't happen you might see unexpected IDs or number of rows
# This will init the in-memory H2 and the permanent external MySQL DB
spring.sql.init.mode=always

# (1.4) let the data initialization rip
spring.jpa.defer-datasource-initialization=false

# (2.1) Support vendor specific files for Flyway
# Must do this; scripts in subdirectories run before those in db/migration
spring.flyway.locations=classpath:db/migration/common,classpath:db/migration/{vendor}